import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import io.github.bonigarcia.wdm.WebDriverManager;

import java.time.Duration;

public class FitPeoAutomation {

    public static void main(String[] args) {

        // Step 1: Set up WebDriver (Chrome in this case)
        WebDriverManager.chromedriver().setup(); // This will automatically manage the ChromeDriver binary
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--start-maximized");  // Start with a maximized window
        WebDriver driver = new ChromeDriver(options);

        try {
            // Step 2: Navigate to FitPeo Homepage
            driver.get("https://www.fitpeo.com");  // Replace with the actual URL
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            
            // Wait until the page is fully loaded
            wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText("Revenue Calculator")));
            
            // Step 3: Navigate to the Revenue Calculator Page
            WebElement revenueCalculatorLink = driver.findElement(By.linkText("Revenue Calculator"));
            revenueCalculatorLink.click();

            // Wait until the Revenue Calculator Page is loaded
            wait.until(ExpectedConditions.presenceOfElementLocated(By.id("slider-section")));

            // Step 4: Scroll down to the Slider Section
            WebElement sliderSection = driver.findElement(By.id("slider-section"));  // Replace with actual ID
            ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", sliderSection);

            // Step 5: Adjust the Slider to value 820
            WebElement slider = driver.findElement(By.id("revenue-slider"));  // Replace with actual ID
            Actions actions = new Actions(driver);
            actions.clickAndHold(slider).moveByOffset(200, 0).release().perform();  // Adjust the offset as needed

            // Step 6: Update the Text Field to 560
            WebElement textField = driver.findElement(By.id("revenue-textfield"));  // Replace with actual text field ID
            textField.clear();
            textField.sendKeys("560");

            // Step 7: Validate Slider Position is Updated
            WebElement sliderValue = driver.findElement(By.id("slider-value"));  // Replace with actual ID
            if (!sliderValue.getText().equals("560")) {
                throw new Exception("Slider value mismatch. Expected: 560, Found: " + sliderValue.getText());
            }

            // Step 8: Select the CPT Codes
            String[] cptCodes = {"CPT-99091", "CPT-99453", "CPT-99454", "CPT-99474"};
            for (String code : cptCodes) {
                WebElement checkbox = driver.findElement(By.xpath("//label[text()='" + code + "']/preceding-sibling::input"));
                if (!checkbox.isSelected()) {
                    checkbox.click();
                }
            }

            // Step 9: Validate Total Recurring Reimbursement
            WebElement totalReimbursementHeader = driver.findElement(By.id("total-reimbursement"));  // Replace with actual ID
            if (!totalReimbursementHeader.getText().equals("$110700")) {
                throw new Exception("Total Reimbursement mismatch. Expected: $110700, Found: " + totalReimbursementHeader.getText());
            }

            System.out.println("Test Passed Successfully!");

        } catch (Exception e) {
            System.out.println("Test Failed: " + e.getMessage());
        } finally {
            // Close the browser after the test
            driver.quit();
        }
    }
}
